[1/16] Linking C static library esp-idf\uart_is\libuart_is.a
[2/16] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\ESP32_Intership\IS_APP\build\bootloader\esp-idf\esptool_py && D:\ESP32_Intership\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP32_Intership/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/ESP32_Intership/IS_APP/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[3/14] Building C object esp-idf/http_server/CMakeFiles/__idf_http_server.dir/http_server.c.obj
[4/14] Building C object esp-idf/wifi/CMakeFiles/__idf_wifi.dir/wifi.c.obj
[5/14] Building C object esp-idf/gpio/CMakeFiles/__idf_gpio.dir/gpio.c.obj
[6/14] Linking C static library esp-idf\gpio\libgpio.a
[7/14] Linking C static library esp-idf\wifi\libwifi.a
[8/14] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/IS_APP.c.obj
[9/14] Linking C static library esp-idf\http_server\libhttp_server.a
[10/14] Linking C static library esp-idf\main\libmain.a
[11/14] Generating ld/sections.ld
[12/14] Linking CXX executable IS_APP.elf
[13/14] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/ESP32_Intership/IS_APP/build/IS_APP.bin
[14/14] cmd.exe /C "cd /D D:\ESP32_Intership\IS_APP\build\esp-idf\esptool_py && D:\ESP32_Intership\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP32_Intership/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/ESP32_Intership/IS_APP/build/partition_table/partition-table.bin D:/ESP32_Intership/IS_APP/build/IS_APP.bin"
IS_APP.bin binary size 0xdab30 bytes. Smallest app partition is 0x100000 bytes. 0x254d0 bytes (15%) free.
